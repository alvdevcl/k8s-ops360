---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ecr-renew
  namespace: "ops360"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ecr-renew
  namespace: "ops360"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "update", "get", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ecr-renew
  namespace: "ops360"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ecr-renew
subjects:
  - kind: ServiceAccount
    name: ecr-renew

---
apiVersion: v1
kind: Secret
metadata:
  name: aws-uat-keys
  namespace: "ops360"
type: Opaque
stringData:
  REGION: us-east-1
  ID: AKIASXIAOY36ASTSFEYD
  SECRET: 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

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecr-renew
  namespace: "ops360"
  labels:
    app: ecr-renew
spec:
  schedule: "0 */6 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          serviceAccountName: ecr-renew
          containers:
            - name: ecr-renew
              image: nabsul/k8s-ecr-login-renew:latest
              env:
                - name: TARGET_NAMESPACE
                  value: "ops360"
                - name: DOCKER_SECRET_NAME
                  value: aws-uat-ecr-cred
                - name: AWS_REGION
                  valueFrom:
                    secretKeyRef:
                      name: aws-uat-keys
                      key: REGION
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: aws-uat-keys
                      key: ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: aws-uat-keys
                      key: SECRET

#- name: Manually create job
#  shell: kubectl create job --from=cronjob/ecr-renew ecr-renew-manual -n ops360 || true; sleep 20   
